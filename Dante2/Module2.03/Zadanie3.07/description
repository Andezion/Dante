Napisz program do zapisu/odczytu liczby typu double poprzez tablice bajtów do pliku tekstowego.

Przygotuj unię do przechowywania liczby double oraz ośmiobajtowej tablicy znaków:

union double_to_char_t {
    double d;
    char tab[8];
};
Napisz funkcje do: zapisywania liczby typu double na dysk po jednym znaku oraz do wczytywania danych z pliku i odtwarzania liczby double. Prototypy funkcji powinny wyglądać następująco:

int save_double(const union double_to_char_t *dtc, const char *filename);
Funkcja zapisuje zawartość unii dtc korzystając jedynie z pola tab. Operację zapisu należy zrealizować bajt po bajcie. Wielkość poprawnie zapisanego pliku to zawsze 8 bajtów.

Parametry:

filename - nazwa pliku, do którego ma zostać zapisana liczba,
dtc - wskaźnik na unię, której zawartość ma zostać zapisana do pliku,
Wartość zwracana:

0 - jeżeli zapis się powiódł,
1 - kiedy podane zostały błędne dane,
2 - w przypadku kiedy nie można otworzyć pliku filename,
3 - w przypadku kiedy nie uda się zapisać wszystkich danych do pliku filename.
int load_double(union double_to_char_t *dtc, const char *filename);
Funkcja wczytuje dane do unii dtc z pliku filename. Dane mogą być zapisywane pod wskaźnik dtc jedynie z wykorzystaniem tablicy tab.

Parametry:

filename - nazwa pliku, z którego ma zostać odczytana liczba,
dtc - wskaźnik na unię, do której mają zostać zapisane dane odczytane z pliku,
Wartość zwracana:

0 - jeżeli odczyt się powiódł,
1 - funkcję wywołano z błędnymi danymi,
2 - w przypadku kiedy nie można otworzyć pliku,
3 - w przypadku, kiedy plik jest uszkodzony.
Napisz program, który pobierze od użytkownika liczbę typu double i zapisze ją do unii, w przypadku wprowadzenia błędnych danych program powinien wyświetlić komunikat Incorrect input i zakończyć działanie z kodem błędu 1. Następnie program ma zapytać użytkownika o nazwę pliku (nie więcej niż 39 znaków) i zapisać do niego liczbę w trybie tekstowym.

W przypadku niepowodzenia program powinien wyświetlić komunikat Couldn’t create file i zakończyć się z kodem błędu 5. Jeżeli udało się zapisać liczbę do pliku to program powinien wyświetlić komunikat File saved i kontynuować pracę.

Następnie program powinien ponownie zapytać użytkownika o nazwę pliku (nie więcej niż 39 znaków) i wczytać z niego zawartość do unii.

Jeżeli operacja zakończy się sukcesem to program powinien wyświetlić na ekranie odczytaną liczbę. Jeżeli plik nie istnieje to program powinien wyświetlić komunikat Couldn’t open file i zakończyć się z kodem błędu 4 W przypadku uszkodzenia pliku wejściowego program ma wyświetlić File corrupted i zakończyć się z kodem błędu 6.

Przykład interakcji z programem -- sukces:

Podaj liczbę: 5860.514410⏎
Podaj nazwę pliku: pick.txt⏎
File saved⏎
Podaj nazwę pliku: die⏎
4820.069145
Pliki: pick.txt, die.

Przykład interakcji z programem -- błędy wejścia/wyjścia:

Podaj liczbę: -79.170020⏎
Podaj nazwę pliku: together⏎
Couldn't create file⏎
⏎
Podaj liczbę: 0.000000⏎
Podaj nazwę pliku: keptbin⏎
File saved⏎
Podaj nazwę pliku: strangebin⏎
Couldn't open file
Przykład interakcji z programem -- próba wczytania uszkodzonego pliku:

Podaj liczbę: 2759.583284⏎
Podaj nazwę pliku: heatbin⏎
File saved⏎
Podaj nazwę pliku: occurbin⏎
File corrupted
Przykład interakcji z programem -- błąd danych wejściowych:

Podaj liczbę: hhYmQwVhb⏎
Incorrect input
Uwagi
W programie nie wolno korzystać z operatora [], oprócz deklaracji tablicy.
Używanie operatorów bitowych jest niedozwolone.
