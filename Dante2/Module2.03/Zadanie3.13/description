Napisz program, który policzy wartość wyrażenia numerycznego, danego ciągiem liczb i operatorów.

Wyrażenie będzie dane w taki sposób, że operator binarny, posiadający operandy po lewej oraz prawej stronie -- arg1 op arg2, zostanie przesunięty za swój prawostronny operand -- arg1 arg2 op

Przykład wyrażeń:

2 + 3 zostanie podane jako 2 3 +
-100 - (-17 + 4) zostanie podane jako -100 -17 14 + -
30 * 2 + 9 zostanie podane jako 30 2 * 9 +
30 + 2 * 9 zostanie podane jako 30 2 9 * +
Przykład postępowania:

Aby obliczyć wartość wyrażenia 30 2 9 * + należy:

Aby obliczyć wartość sumy (+) pobierając jej dwa operandy z lewej strony.
Pierwszy operand sumy zaczyna się operacją mnożenia (*) o postaci 2 9 *. Aby obliczyć wartośc iloczynu, należy pobrać jego dwa operandy z lewej strony.
Operand 9 ma wartość 9
Operand 2 ma wartość 2.
Skoro znamy wartości obu operandów iloczynu, to wartość ilocznu wynosi 18.
Drugi operand sumy (30) ma wartośc 30. Skoro znamy wartości obu operandów sumy: 30 oraz 18 to wartość sumy wynosi 48.
Ostatecznie, wartość całego wyrażenia wynosi tyle, ile wartośc pierwszej opearcji z lewej strony, czyli 48.
Przygotuj strukturę, która będzie przechowywała typ danych oraz liczbę zmiennoprzecinkową pojedynczej precyzji lub znak operacji. Struktura powinna wyglądać następująco:

enum data_type_t
{
  operator,
  value
};

struct data_t
{
  enum data_type_t type;
  union {
    float value;
    char operator;
  };
};
Napisz funkcje calculate oraz display, które będą obliczały wartość podanego wyrażenia oraz wyświetlały to wyrażenie. Prototypy funkcji powinny wyglądać następująco:

void display(const struct data_t *data, int size);
int calculate(struct data_t *data, int size);

Funkcja calculate przyjmuje tablicę struktur data_t oraz rozmiar size tej tablicy. Następnie oblicza wartość wyrażenia w niej zawartego. Obliczanie wyrażenia ma się odbywać w następujący sposób:

poszukiwany jest pierwszy operator (op),
pobierane są dwie liczby (a i b) znajdujące się bezpośrednio przed operatorem,
obliczana jest wartość wyrażenia a op b,
wynik operacji wstawiany jest zamiast trzech analizowanych komórek tablicy (tych, zawierających liczby a i b oraz operator op).
Funkcja kończy działanie w momencie, kiedy w tablicy zostanie tylko jedna liczba.
Wartość zwracana:

w przypadku kiedy nie będzie możliwe obliczenie wartości wyrażenia, funkcja powinna zwrócić wartość 2.
w przypadku przekazania do funkcji błędnych danych wartość 1.
w przypadku sukcesu funkcja zwraca 0, a wynik wyrażenia zamieszcza w pierwszej komórce tablicy data.
Funkcja display wyświetla zawartość tablicy struktur data_t w taki sposób, że poszczególne elementy są oddzielone spacjami. W przypadku przekazania błędnych danych funkcja nie podejmuje żadnych działań.

Napisz program, który pobierze od użytkownika wyrażenie składające się z liczb całkowitych i operatorów +, -, /, *, a następnie wyświetli w osobnych liniach pobrane wyrażenie oraz jego wynik.

Program ma pobrać maksymalnie 100 elementów wyrażenia.

W przypadku wprowadzenia przez użytkownika błędnych znaków program powinien wyświetlić komunikat Incorrect input i zakończyć działanie z kodem błędu 1. W przypadku kiedy niemożliwe będzie wyznaczenie wartości wyrażenia, program powinien zamiast wyniku wyświetlić komunikat Incorrect input data i zakończyć działanie z kodem błędu 2.

Przykładowa interakcja z programem -- sukces

Podaj wyrażenie: 99 12 / 4 - 6 - 69 -1 + + -62 + -26 63 - * ⏎
99.000000 12.000000 / 4.000000 - 6.000000 - 69.000000 -1.000000 + + -62.000000 + -26.000000 63.000000 - * ⏎
-378.250000
Przykładowa interakcja z programem -- błąd danych wejściowych

Podaj wyrażenie: 2 22 + -78 / -21 -10 - * -54 - -99 76 -6 - * - teASnTl⏎
Incorrect input
Przykładowa interakcja z programem -- brak możliwości wykonania obliczeń

Podaj wyrażenie: + * + 74 + 12 52 37 34 24 22 + - + 22 96 2 - 59 / ⏎
+ * + 74.000000 + 12.000000 52.000000 37.000000 34.000000 24.000000 22.000000 + - + 22.000000 96.000000 2.000000 - 59.000000 / ⏎
Incorrect input data
Uwagi
W programie nie wolno używać operatora [].
Deklarację funkcji oraz definicje struktur i unii umieść w pliku nagłówkowym calculator.h, a definicje funkcji w pliku calculator.c.
