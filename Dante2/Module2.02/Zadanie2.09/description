Rozbuduj program z zadania 2.7 Liczby zespolone - koszmar powraca o możliwość pobierania liczby zespolonej od użytkownika oraz wykonywania podstawowych operacji matematycznych na liczbach zespolonych. Przygotuj do tego odpowiednie funkcje, których prototypy powinny wyglądać następująco:

int read(struct complex_t* cp);
Funkcja read pobiera od użytkownika liczbę zespoloną, w formacie RE ± iIM, a następnie zapisuje ją pod wskaźnik cp. Przygotowana funkcja nie powinna wyświetlać żadnych komunikatów.

Wartość zwracana:

2 - w przypadku podania przez użytkownika błędnych danych,
1 - w przypadku przekazania do funkcji nieprawidłowych danych,
0 - w przypadku sukcesu.
int add(const struct complex_t *first, const struct complex_t *second,
        struct complex_t* result);
        
int subtract(const struct complex_t *first, const struct complex_t *second,
             struct complex_t* result);
             
int multiply(const struct complex_t *first, const struct complex_t *second,
             struct complex_t* result);
             
int divide(const struct complex_t *first, const struct complex_t *second,
           struct complex_t* result);
Funkcje powinny wykonywać operacje na liczbach zespolonych (first op second), a wynik działania powinien zostać zapisany pod wskaźnik result.

Wartość zwracana:

2 - jeżeli nie jest możliwe wykonanie żądanej operacji na liczbach zespolonych,
1 - w przypadku przekazania do funkcji błędnych danych,
0 - w przypadku poprawnego wykonania operacji. Zawartość struktury complex_t pod adresem p nie może ulec zmianie.
Napisz program, który pobierze od użytkownika dwie liczby zespolone, a następnie przeprowadzi na nich operacje: dodawania, odejmowania, mnożenia oraz dzielenia. Wyniki działań mają zostać wyświetlone na ekranie w tej samej kolejności, w kolejnych liniach.

Jeżeli jakieś działania nie może zostać wykonane, to zamiast wyniku program ma wyświetlić komunikat Operation not permitted. W przypadku podania przez użytkownika błędnych danych program powinien wyświetlić komunikat Incorrect input i niezwłocznie zakończyć działanie z kodem błędu 1. W przeciwnym razie program powinien zwrócić wartość 0.

Przykładowa interakcja z programem -- sukces:

Enter first value: -8.220106+i8.242387⏎
Enter second value: -0.867427-i2.235813⏎
-9.087533 + i6.006574⏎
-7.352679 + i10.478200⏎
25.558777 + i11.228951⏎
-1.964445 - i4.438708⏎
Enter first value: 8.683781+i7.498731⏎
Enter second value: 0.000000+i0.000000⏎
8.683781 + i7.498731⏎
8.683781 + i7.498731⏎
0.000000 + i0.000000⏎
Operation not permitted
Przykład interakcji z programem -- błąd danych wejściowych:

Enter first value: 8.018808+-i6.109173⏎
Incorrect input
Enter first value: 9.533637-i0.365355⏎
Enter second value: 9.533637-i-0.365355⏎
Incorrect input
